version: "3.4"

services:
    data_gathering_subsystem:
        build:
            context: .
            dockerfile: ./data_gathering_subsystem/Dockerfile
        container_name: data_gathering_subsystem
        image: diegohermida/data_gathering_subsystem:latest
        volumes:
            - ${ROOT_DIR}/log:/ClimateChangeApp/log
            - ${ROOT_DIR}/state:/ClimateChangeApp/state
        environment:
            - PYTHONUNBUFFERED=1
    data_conversion_subsystem:
        build:
            context: .
            dockerfile: ./data_conversion_subsystem/Dockerfile
        container_name: data_conversion_subsystem
        image: diegohermida/data_conversion_subsystem:latest
        volumes:
            - ${ROOT_DIR}/log:/ClimateChangeApp/log
            - ${ROOT_DIR}/state:/ClimateChangeApp/state
        environment:
            - PYTHONUNBUFFERED=1
    api:
        build:
            context: .
            dockerfile: ./api/Dockerfile
        container_name: data_gathering_subsystem_api
        image: diegohermida/data_gathering_subsystem_api:latest
        environment:
            - PYTHONUNBUFFERED=1
        volumes:
            - ${ROOT_DIR}/log/api:/ClimateChangeApp/log/api
        ports:
            - "${BIND_IP_ADDRESS}:5000:5000"
    telegram_bot:
        build:
            context: .
            dockerfile: ./telegram_bot/Dockerfile
        container_name: telegram_bot
        image: diegohermida/telegram_bot:latest
        environment:
            - PYTHONUNBUFFERED=1
    mongodb:
        image: mongo:latest
        container_name: mongodb
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=root
        volumes:
            - ${ROOT_DIR}/data/db:/data/db
        ports:
            - "${BIND_IP_ADDRESS}:27017:27017"
        command: mongod --smallfiles
    postgres:
        image: postgres:latest
        container_name: postgres
        environment:
            - PGDATA=/postgresql/data
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
        volumes:
            - ${ROOT_DIR}/postgresql/data:/postgresql/data
        ports:
            - "${BIND_IP_ADDRESS}:5432:5432"
    utilities:
        build:
            context: .
            dockerfile: ./utilities/Dockerfile
        container_name: utilities
        image: diegohermida/utilities:latest
        environment:
            - PYTHONUNBUFFERED=1
        depends_on:
          - mongodb
          - postgres
    jenkins:
        build:
            context: .
            dockerfile: ./ci/Dockerfile
        image: diegohermida/jenkins:latest
        container_name: jenkins
        volumes:
            - ${ROOT_DIR}/jenkins:/var/jenkins_home
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            - "${BIND_IP_ADDRESS}:8090:8080"
            - "${BIND_IP_ADDRESS}:50000:50000"
    sonar:
        image: sonarqube:latest
        container_name: sonar
        environment:
            - SONARQUBE_JDBC_USERNAME=sonar
            - SONARQUBE_JDBC_PASSWORD=sonar
            - SONARQUBE_JDBC_URL=jdbc:postgresql://${HOST_IP}:5434/sonar
        volumes:
            - ${ROOT_DIR}/sonar/extensions:/opt/sonarqube/extensions
            - ${ROOT_DIR}/sonar/data:/opt/sonarqube/data
        ports:
            - "${BIND_IP_ADDRESS}:9000:9000"
        depends_on:
          - sonar_db
    sonar_db:
        image: postgres:latest
        container_name: sonar_db
        environment:
            - PGDATA=/postgresql/data
            - POSTGRES_USER=sonar
            - POSTGRES_PASSWORD=sonar
            - POSRGRES_DB=sonar
        volumes:
            - ${ROOT_DIR}/sonar/postgresql/data:/postgresql/data
        ports:
            - "${BIND_IP_ADDRESS}:5434:5432"

    # CI services
    data_gathering_subsystem_CI:
        build:
            context: .
            dockerfile: ./data_gathering_subsystem/Dockerfile
        container_name: data_gathering_subsystem_CI
        image: diegohermida/data_gathering_subsystem:latest_CI
        environment:
            - PYTHONUNBUFFERED=1
        depends_on:
          - mongodb_CI
    data_conversion_subsystem_CI:
        build:
            context: .
            dockerfile: ./data_conversion_subsystem/Dockerfile
        container_name: data_conversion_subsystem_CI
        image: diegohermida/data_conversion_subsystem:latest_CI
        environment:
            - PYTHONUNBUFFERED=1
        depends_on:
          - postgres_CI
          - api_CI
    api_CI:
        build:
            context: .
            dockerfile: ./api/Dockerfile
        container_name: data_gathering_subsystem_api_CI
        image: diegohermida/data_gathering_subsystem_api:latest_CI
        environment:
            - PYTHONUNBUFFERED=1
        ports:
            - "${BIND_IP_ADDRESS}:5001:5000"
        depends_on:
          - mongodb_CI
    mongodb_CI:
        image: mongo:latest
        container_name: mongodb_CI
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=root
        ports:
            - "${BIND_IP_ADDRESS}:27018:27017"
        command: mongod --smallfiles
    postgres_CI:
        image: postgres:latest
        container_name: postgres_CI
        environment:
            - PGDATA=/postgresql/data
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
        ports:
            - "${BIND_IP_ADDRESS}:5433:5432"
    telegram_bot_CI:
        build:
            context: .
            dockerfile: ./telegram_bot/Dockerfile
        container_name: telegram_bot_CI
        image: diegohermida/telegram_bot:latest_CI
        environment:
            - PYTHONUNBUFFERED=1
    utilities_CI:
        build:
            context: .
            dockerfile: ./utilities/Dockerfile
        container_name: utilities_CI
        image: diegohermida/utilities:latest_CI
        environment:
            - PYTHONUNBUFFERED=1
        depends_on:
          - mongodb_CI
          - postgres_CI
    coverage_CI:
        build:
            context: .
            dockerfile: ./ci/Dockerfile-coverage
        container_name: coverage_CI
        image: diegohermida/coverage:latest_CI
        environment:
            - PYTHONUNBUFFERED=1