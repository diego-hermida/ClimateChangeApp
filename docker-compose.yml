version: "3.4"

services:
    data_gathering_subsystem:
        build:
            context: .
            dockerfile: ./data_gathering_subsystem/Dockerfile
        container_name: data_gathering_subsystem
        image: diegohermida/data_gathering_subsystem:2.0.1
        volumes:
            - ${ROOT_DIR}/log:/ClimateChangeApp/log
            - ${ROOT_DIR}/state:/ClimateChangeApp/state
        environment:
            - PYTHONUNBUFFERED=1
    data_conversion_subsystem:
        build:
            context: .
            dockerfile: ./data_conversion_subsystem/Dockerfile
        container_name: data_conversion_subsystem
        image: diegohermida/data_conversion_subsystem:1.0.1
        volumes:
            - ${ROOT_DIR}/log:/ClimateChangeApp/log
            - ${ROOT_DIR}/state:/ClimateChangeApp/state
        environment:
            - PYTHONUNBUFFERED=1
    api:
        build:
            context: .
            dockerfile: ./api/Dockerfile
        container_name: data_gathering_subsystem_api
        image: diegohermida/data_gathering_subsystem_api:1.0.0
        environment:
            - PYTHONUNBUFFERED=1
        volumes:
            - ${ROOT_DIR}/log/api:/ClimateChangeApp/log/api
        ports:
            - 5000:5000
    telegram_bot:
        build:
            context: .
            dockerfile: ./telegram_bot/Dockerfile
        container_name: telegram_bot
        image: diegohermida/telegram_bot:1.0
        environment:
            - PYTHONUNBUFFERED=1
    mongodb:
        image: mongo:latest
        container_name: mongodb
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=root
        volumes:
            - ${ROOT_DIR}/data/db:/data/db
        ports:
            - 27017:27017
        command: mongod --smallfiles
    postgres:
        image: postgres
        container_name: postgres
        environment:
            - PGDATA=/postgresql/data
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
        volumes:
            - ${ROOT_DIR}/postgresql/data:/postgresql/data
        ports:
            - 5432:5432
    jenkins:
        build:
            context: .
            dockerfile: ./ci/Dockerfile
        image: diegohermida/jenkins:1.0
        container_name: jenkins
        volumes:
            - ${ROOT_DIR}/jenkins:/var/jenkins_home
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            - 8090:8080
            - 50000:50000


    # CI services
    data_gathering_subsystem_CI:
        build:
            context: .
            dockerfile: ./data_gathering_subsystem/Dockerfile
        container_name: data_gathering_subsystem_CI
        image: diegohermida/data_gathering_subsystem:2.0.1_CI
        volumes:
            - ${ROOT_DIR}/log:/ClimateChangeApp/log
            - ${ROOT_DIR}/state:/ClimateChangeApp/state
        environment:
            - PYTHONUNBUFFERED=1
    data_conversion_subsystem_CI:
        build:
            context: .
            dockerfile: ./data_conversion_subsystem/Dockerfile
        container_name: data_conversion_subsystem_CI
        image: diegohermida/data_conversion_subsystem:1.0.1_CI
        volumes:
            - ${ROOT_DIR}/log:/ClimateChangeApp/log
            - ${ROOT_DIR}/state:/ClimateChangeApp/state
        environment:
            - PYTHONUNBUFFERED=1
    api_CI:
        build:
            context: .
            dockerfile: ./api/Dockerfile
        container_name: data_gathering_subsystem_api_CI
        image: diegohermida/data_gathering_subsystem_api:1.0.0_CI
        environment:
            - PYTHONUNBUFFERED=1
        volumes:
            - ${ROOT_DIR}/log/api:/ClimateChangeApp/log/api
        ports:
            - 5001:5000
    mongodb_CI:
        image: mongo:latest
        container_name: mongodb_CI
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=root
        volumes:
            - ${ROOT_DIR}/data/db:/data/db
        ports:
            - 27018:27017
        command: mongod --smallfiles
    postgres_CI:
        image: postgres:latest
        container_name: postgres_CI
        environment:
            - PGDATA=/postgresql/data
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
        volumes:
            - ${ROOT_DIR}/postgresql/data:/postgresql/data
        ports:
            - 5433:5432
