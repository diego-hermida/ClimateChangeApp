worker_processes 2;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
pid /tmp/nginx.pid;
error_log /tmp/nginx.error.log;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /tmp/nginx.access.log combined;
  sendfile on;

  upstream app_server {
    server web_application_subsystem:8000 fail_timeout=0;
  }

  server {
    # if no Host match, close the connection to prevent host spoofing
    listen 80 default_server;
    return 444;
  }

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 80;

    # set the correct host(s) for your site
    # TODO: CHANGE THIS NAME BY THE HOSTNAME (IN ORDER TO ALLOW ALL CONNECTIONS)
    server_name localhost;

    keepalive_timeout 5;

    location = /favicon.ico {
        alias /var/www/static/images/favicon.ico;
    }

    # alias robots.txt to static
	location = /robots.txt {
		alias /var/www/static/robots.txt;
	}

    location /static/ {
        root /var/www;
    }

    location / {
      proxy_pass_header X-CSRFToken;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto http;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header X-Real-IP $remote_addr;

      proxy_redirect off;
      proxy_pass http://app_server;
    }
  }
}